# *overloadt(<layer>, <action>, <timeout>)*
# 	Identical to overload, but only activates the layer if the bound key is
# 	held for \<timeout\> milliseconds. This is mainly useful for overloading keys
# 	which are commonly struck in sequence (e.g letter keys).
#
# 	Note that this will add a visual delay when typing, since overlapping
# 	keys will be queued until the timeout expires or the bound key is
# 	released.
#
# *overloadt2(<layer>, <action>, <timeout>)*
# 	Identical to overloadt, but additionally resolves as a hold in the
# 	event of an intervening key tap.
#
# *overloadi(<action 1>, <action 2>, <idle timeout>)*
# 	Activate <action 1> if the last non-action (i.e symbol) key was struck less
# 	than <timeout> milliseconds ago, otherwise activate <action 2>.
#
# 	This can be used in combination with other overload timeouts and is particularly
# 	useful for overloading letter keys (often called 'homerow mods').

# *lettermod(<layer>, <key>, <idle timeout>, <hold timeout>)*
# 	An alias for:
#
# 		*overloadi(<key>, overloadt2(<layer>, <key>, <hold timeout>), <idle timeout>)*

[ids]
# You can specify multiple keyboards by separating them with spaces
# Find your keyboard id using: sudo keyd -m
*

[main]

a = lettermod(alt, a, 100, 200)
s = lettermod(meta, s, 100, 200)
d = lettermod(shift, d, 100, 200)
f = lettermod(control, f, 100, 200)

j = lettermod(control, j, 100, 200)
k = lettermod(shift, k, 100, 200)
l = lettermod(meta, l, 100, 200)
; = lettermod(alt, ;, 100, 200)

capslock = overloadt2(nav_num_layer, escape, 1000)
escape = capslock

leftshift = tab

[nav_num_layer]
h = left
j = down
k = up
l = right
